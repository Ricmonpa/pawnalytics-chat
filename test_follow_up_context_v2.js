// Test espec√≠fico para el flujo problem√°tico mostrado en la imagen
// Simula exactamente el caso donde el usuario responde a preguntas de seguimiento

const testSpecificFollowUpFlow = () => {
  console.log('üß™ Iniciando test del flujo espec√≠fico problem√°tico...');
  
  // Simular exactamente los mensajes de la imagen
  const messages = [
    {
      role: "assistant",
      content: "¬°Hola! Soy Pawnalytics, tu asistente de salud y cuidado para mascotas. ¬øEn qu√© puedo ayudarte hoy?"
    },
    {
      role: "user",
      content: "hola mi perrito tiene su ojo as√≠",
      image: "data:image/jpeg;base64,..."
    },
    {
      role: "assistant",
      content: "Entiendo tu preocupaci√≥n por el ojo de tu perrito. La imagen muestra una opacidad significativa en el cristalino, lo que sugiere una posible catarata. Sin embargo, para un diagn√≥stico preciso necesito m√°s informaci√≥n.\n\nüìä **INTERPRETACI√ìN DEL AN√ÅLISIS (Preliminar):** Basado en la imagen, hay una alta sospecha de cataratas. Pero la severidad y el estadio requieren una evaluaci√≥n completa.\n\nPara poder darte un an√°lisis m√°s preciso y recomendaciones espec√≠ficas, necesito:\n\n1. **M√°s im√°genes:** Si puedes, por favor env√≠ame fotos del otro ojo, y otras del mismo ojo desde diferentes √°ngulos (de frente, de perfil). Una foto con flash y otra sin flash puede ayudar tambi√©n.\n2. **Historia cl√≠nica del perrito:** ¬øQu√© edad tiene? ¬øQu√© raza es? ¬øTiene alguna otra condici√≥n m√©dica, como diabetes? ¬øCu√°ndo notaste por primera vez el problema en su ojo? ¬øHa habido alg√∫n trauma ocular reciente? ¬øPresenta otros s√≠ntomas como lagrimeo excesivo, secreci√≥n, enrojecimiento, o dolor evidente (frot√°ndose el ojo, entrecerr√°ndolo)?\n3. **Informaci√≥n sobre el cuidado del perro:** ¬øQu√© tipo de alimento le das? ¬øRecibe suplementos vitam√≠nicos?\n\nCon esta informaci√≥n adicional, podr√© realizar un an√°lisis m√°s completo y ofrecerte un plan de acci√≥n m√°s preciso. Recuerda que una consulta con un veterinario oftalm√≥logo es crucial para un diagn√≥stico y tratamiento adecuados. Mientras tanto, te recomiendo mantener el √°rea limpia con suero fisiol√≥gico, y evitar que se frote o se lastime el ojo."
    },
    {
      role: "user",
      content: "9 a√±os, Yorkshire. not√© esto hace dos a√±os. no presenta lagrimeo ni se frota. no ha recibido ningun tratamiento."
    }
  ];
  
  // Funci√≥n simulada para detectar preguntas de seguimiento
  const lastAssistantAskedFollowUpQuestions = (messages) => {
    if (messages.length === 0) return false;
    
    const lastMessage = messages[messages.length - 1];
    if (lastMessage.role !== 'assistant') return false;
    
    const followUpKeywords = [
      'necesito m√°s informaci√≥n', 'need more information', 'para poder ayudarte mejor',
      'to help you better', 'para darte un an√°lisis m√°s preciso', 'for a more precise analysis',
      'por favor responde', 'please answer', 'necesito saber', 'i need to know',
      '¬øqu√© edad tiene?', 'what age is', '¬øqu√© raza es?', 'what breed is',
      '¬øcu√°ndo notaste', 'when did you notice', '¬øtiene alg√∫n', 'does it have any',
      '¬øpresenta otros s√≠ntomas', 'does it show other symptoms', '¬øha habido alg√∫n',
      'has there been any', '¬øqu√© tipo de', 'what type of', '¬øcu√°ntas veces',
      'how many times', '¬øha recibido', 'has it received', '¬øtiene alguna otra',
      'does it have any other', '¬øobserva alg√∫n', 'do you observe any',
      '¬øpuedes describir', 'can you describe', '¬øpodr√≠as compartir', 'could you share',
      '¬øme puedes decir', 'can you tell me', '¬øsabes si', 'do you know if',
      '¬ørecuerdas si', 'do you remember if', '¬ønotaste si', 'did you notice if',
      '¬øcambi√≥ algo', 'did anything change', '¬øempeor√≥', 'did it get worse',
      '¬ømejor√≥', 'did it improve', '¬øapareci√≥ de repente', 'did it appear suddenly',
      '¬øfue gradual', 'was it gradual', '¬ødespu√©s de qu√©', 'after what',
      '¬øantes de qu√©', 'before what', '¬ødurante cu√°nto tiempo', 'for how long',
      '¬øcon qu√© frecuencia', 'how often', '¬øen qu√© momento', 'at what moment',
      '¬øen qu√© circunstancias', 'under what circumstances', '¬øqu√© otros signos',
      'what other signs', '¬øqu√© m√°s observas', 'what else do you observe',
      '¬øhay algo m√°s', 'is there anything else', '¬øalguna otra cosa', 'anything else',
      '¬øpuedes agregar', 'can you add', '¬øpodr√≠as mencionar', 'could you mention',
      '¬øme puedes contar', 'can you tell me', '¬øsabes algo m√°s', 'do you know anything else'
    ];
    
    return followUpKeywords.some(keyword => 
      lastMessage.content.toLowerCase().includes(keyword.toLowerCase())
    );
  };
  
  // Funci√≥n simulada para detectar nueva consulta (versi√≥n mejorada)
  const detectNewConsultation = (message, hasImage = false, messages) => {
    const lowerMessage = message.toLowerCase();
    
    // Palabras clave m√°s espec√≠ficas
    const newConsultationKeywords = [
      'hola', 'hello', 'hi', 'hey', 'buenos d√≠as', 'good morning', 'buenas tardes', 
      'good afternoon', 'buenas noches', 'good evening', 'saludos', 'greetings',
      'tengo un perro', 'i have a dog', 'tengo una perra', 'i have a female dog',
      'tengo un gato', 'i have a cat', 'tengo una gata', 'i have a female cat',
      'mi perro tiene', 'my dog has', 'mi perra tiene', 'my female dog has',
      'mi gato tiene', 'my cat has', 'mi gata tiene', 'my female cat has',
      'mi mascota tiene', 'my pet has', 'mi animal tiene', 'my animal has',
      'tengo una mascota', 'i have a pet', 'tengo un animal', 'i have an animal',
      'tiene una verruga', 'has a wart', 'tiene un bulto', 'has a lump',
      'tiene un problema en el ojo', 'has an eye problem', 'tiene un problema en la piel', 'has a skin problem',
      'tiene dolor', 'has pain', 'est√° enfermo', 'is sick', 'est√° enferma', 'is sick (female)',
      'tiene una lesi√≥n', 'has an injury', 'tiene una herida', 'has a wound',
      'otra consulta', 'another consultation', 'diferente problema', 'different problem',
      'nueva mascota', 'new pet', 'otro animal', 'another animal', 'adem√°s de esto', 'in addition to this',
      'tambi√©n tengo', 'i also have', 'm√°s problemas', 'more problems', 'otro problema', 'another problem'
    ];
    
    // Detectar si es una nueva consulta usando expresiones regulares para evitar falsos positivos
    const isNewConsultation = newConsultationKeywords.some(keyword => {
      // Crear una expresi√≥n regular que busque la palabra completa con espacios o al inicio/final
      const regex = new RegExp(`\\b${keyword.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}\\b`, 'i');
      return regex.test(lowerMessage);
    });
    
    // Si el asistente hizo preguntas de seguimiento Y no hay indicadores claros de nueva consulta, NO es una nueva consulta
    if (lastAssistantAskedFollowUpQuestions(messages) && !isNewConsultation) {
      console.log('üîç DEBUG - Asistente hizo preguntas de seguimiento y no hay indicadores de nueva consulta, manteniendo contexto');
      return false;
    }
    
    return isNewConsultation;
  };
  
  // Simular el procesamiento del mensaje del usuario
  const userResponse = "9 a√±os, Yorkshire. not√© esto hace dos a√±os. no presenta lagrimeo ni se frota. no ha recibido ningun tratamiento.";
  const messagesBeforeResponse = messages.slice(0, 3);
  
  console.log('\nüìã Test del flujo espec√≠fico problem√°tico:');
  console.log('Mensaje del usuario:', userResponse);
  console.log('¬øEl asistente hizo preguntas de seguimiento?', lastAssistantAskedFollowUpQuestions(messagesBeforeResponse));
  console.log('¬øSe detecta como nueva consulta?', detectNewConsultation(userResponse, false, messagesBeforeResponse));
  
  // Simular el procesamiento con contexto
  const isFollowUpResponse = lastAssistantAskedFollowUpQuestions(messagesBeforeResponse);
  const isNewConsultation = detectNewConsultation(userResponse, false, messagesBeforeResponse);
  
  if (isFollowUpResponse && !isNewConsultation) {
    console.log('‚úÖ CORRECTO: El sistema detecta correctamente que es una respuesta de seguimiento');
    console.log('‚úÖ CORRECTO: El sistema mantendr√° el contexto de la conversaci√≥n');
    console.log('‚úÖ CORRECTO: El sistema incluir√° el historial en el prompt para Gemini');
    
    // Simular el prompt que se enviar√≠a a Gemini
    const relevantHistory = messagesBeforeResponse.slice(-2); // √öltimos 2 mensajes relevantes
    const contextMessages = relevantHistory.map(msg => {
      if (msg.role === 'user') {
        return `Usuario: ${msg.content}`;
      } else if (msg.role === 'assistant') {
        return `Asistente: ${msg.content}`;
      }
      return '';
    }).filter(msg => msg !== '');
    
    const contextString = contextMessages.join('\n\n');
    const enhancedPrompt = `=== CONTEXTO DE LA CONVERSACI√ìN ANTERIOR ===\n${contextString}\n\n=== RESPUESTA ACTUAL DEL USUARIO ===\nRespuesta a preguntas de seguimiento: ${userResponse}\n\nPor favor, contin√∫a con el an√°lisis basado en la informaci√≥n proporcionada por el usuario, sin pedir informaci√≥n que ya te ha dado.`;
    
    console.log('\nüìù Prompt que se enviar√≠a a Gemini:');
    console.log(enhancedPrompt);
    
    console.log('\nüéØ Resultado esperado:');
    console.log('‚úÖ El asistente deber√≠a continuar con el an√°lisis basado en:');
    console.log('  - Edad: 9 a√±os');
    console.log('  - Raza: Yorkshire');
    console.log('  - Tiempo: hace dos a√±os');
    console.log('  - S√≠ntomas: no presenta lagrimeo ni se frota');
    console.log('  - Tratamiento: no ha recibido ninguno');
    console.log('‚úÖ El asistente NO deber√≠a pedir informaci√≥n que ya proporcion√≥ el usuario');
    
  } else {
    console.log('‚ùå PROBLEMA: El sistema no detecta correctamente la respuesta de seguimiento');
  }
  
  return {
    success: isFollowUpResponse && !isNewConsultation,
    isFollowUpResponse,
    isNewConsultation,
    contextProvided: isFollowUpResponse && !isNewConsultation
  };
};

// Ejecutar el test
const results = testSpecificFollowUpFlow();
console.log('\nüìä Resultados del test espec√≠fico:', results);

// Exportar para uso en otros tests
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { testSpecificFollowUpFlow };
}
